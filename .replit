modules = ["python-3.11", "web"]

[nix]
channel = "stable-24_05"
packages = ["openssl", "postgresql"]

[workflows]

[[workflows.workflow]]
name = "Project"
mode = "parallel"
author = "agent"

[[workflows.workflow.tasks]]
task = "workflow.run"
args = "RugguardBot"

[[workflows.workflow.tasks]]
task = "workflow.run"
args = "rugguard_bot_setup"

[[workflows.workflow.tasks]]
task = "workflow.run"
args = "WebInterface"

[[workflows.workflow.tasks]]
task = "workflow.run"
args = "Start application"

[[workflows.workflow]]
name = "RugguardBot"
author = "agent"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "pip install -q tweepy python-dotenv textblob requests && python main.py"

[[workflows.workflow]]
name = "rugguard_bot_setup"
author = "agent"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "pip install tweepy textblob python-dotenv requests statistics && python main.py"

[[workflows.workflow]]
name = "WebInterface"
author = "agent"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "python app.py"
waitForPort = 5000

[[workflows.workflow]]
name = "Start application"
author = "agent"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "gunicorn --bind 0.0.0.0:5000 --reuse-port --reload main:app"
waitForPort = 5000

[deployment]
run = ["gunicorn", "--bind", "0.0.0.0:5000", "main:app"]
deploymentTarget = "autoscale"

[[ports]]
localPort = 5000
externalPort = 80

[[ports]]
localPort = 5001
externalPort = 3000

[[ports]]
localPort = 5002
externalPort = 3001
